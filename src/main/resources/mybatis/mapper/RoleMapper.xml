<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.tuiguang.repository.RoleRepository">
    <resultMap id="BaseResultMap" type="com.edu.tuiguang.entity.Role">
        <id column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="permissions" jdbcType="VARCHAR" property="permissions"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="update_user_id" jdbcType="INTEGER" property="updateUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <association property="createBy" javaType="com.edu.tuiguang.entity.User">
            <result column="user_id" property="userId"/>
            <result column="user_name" property="userName"/>
        </association>
        <association property="updateBy" javaType="com.edu.tuiguang.entity.User">
            <result column="user_id" property="userId"/>
            <result column="user_name" property="userName"/>
        </association>
    </resultMap>
    <sql id="BaseColumns">
        role_id, role_name, permissions, create_user_id, update_user_id, create_time, update_time
    </sql>
    <select id="findAll" resultMap="BaseResultMap">
        select role_id, role_name from `role`
    </select>
    <select id="findList" resultMap="BaseResultMap">
        select
          r.role_id,
          r.role_name,
          r.permissions,
          r.create_time,
          r.update_time,
          u.*
        from
          `role` r,
          `user` u
        where
          1=1
          <if test="roleName != null">
              and r.role_name like '%' #{roleName} '%'
          </if>
          and
            (r.create_user_id = u.user_id or r.update_user_id = u.user_id)
        order by r.create_time desc
        limit #{pageStart}, #{pageSize}
    </select>
    <select id="findById" resultMap="BaseResultMap">
        select <include refid="BaseColumns" />
        from `role`
        where role_id = #{roleId}
    </select>
    <select id="total" resultType="java.lang.Long">
        select count(*) from `role`
    </select>
    <insert id="insert" parameterType="com.edu.tuiguang.entity.Role">
        insert into `role` (role_name, permissions,create_user_id, create_time)
        values (#{roleName}, #{permissions}, #{createUserId}, #{createTime})
    </insert>
    <update id="update" parameterType="com.edu.tuiguang.entity.Role">
        update `role`
        <set>
            <if test="roleName != null">
                role_name = #{roleName},
            </if>
            <if test="permissions != null">
                permissions = #{permissions},
            </if>
            update_user_id = #{updateUserId},
            update_time = #{updateTime}
        </set>
        where role_id = #{roleId}
    </update>
    <delete id="del" parameterType="java.lang.Integer">
        delete from `role` where role_id = #{roleId}
    </delete>
</mapper>