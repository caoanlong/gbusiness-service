<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.tuiguang.repository.UserRepository">
    <resultMap id="BaseResultMap" type="com.edu.tuiguang.entity.User">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="avatar" jdbcType="VARCHAR" property="avatar"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId"/>
        <result column="update_user_id" jdbcType="INTEGER" property="updateUserId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <association property="createBy" javaType="com.edu.tuiguang.entity.User">
            <result column="user_id" property="userId"/>
            <result column="user_name" property="userName"/>
        </association>
        <association property="updateBy" javaType="com.edu.tuiguang.entity.User">
            <result column="user_id" property="userId"/>
            <result column="user_name" property="userName"/>
        </association>
        <association property="role" javaType="com.edu.tuiguang.entity.Role">
            <result column="role_id" property="roleId"/>
            <result column="role_name" property="roleName"/>
        </association>
    </resultMap>
    <sql id="BaseColumns">
        user_id, user_name, avatar, mobile, role_id, create_user_id, update_user_id, create_time, update_time
    </sql>
    <select id="findAll" resultMap="BaseResultMap">
        select <include refid="BaseColumns" /> from `user`
    </select>
    <select id="findList" resultMap="BaseResultMap">
        select
          u.user_id,
          u.user_name,
          u.mobile,
          u.create_time,
          u.update_time,
          r.*
        from `user` u, `role` r
        where
          1=1
          <if test="userName != null">
              and u.user_name like '%' #{userName} '%'
          </if>
          and
            u.role_id = r.role_id
          or
            (u.create_user_id = u.user_id or u.update_user_id = u.user_id)
        order by u.create_time desc
        limit #{pageStart}, #{pageSize}
    </select>
    <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
          <include refid="BaseColumns" />
        from
          `user` where user_id = #{userId}
    </select>
    <select id="total" resultType="java.lang.Long">
        select count(*) from `user`
    </select>
    <select id="findByNameAndPassword" resultMap="BaseResultMap">
        select * from `user` where user_name = #{userName} and password = #{password}
    </select>
    <insert id="insert" parameterType="com.edu.tuiguang.entity.User">
        insert into `user` (
          user_name,
          password,
          avatar,
          mobile,
          role_id,
          create_user_id,
          create_time
        )
        values (
          #{userName},
          #{password},
          #{avatar},
          #{mobile},
          #{roleId},
          #{createUserId},
          #{createTime}
        )
    </insert>
    <update id="update" parameterType="com.edu.tuiguang.entity.User">
        update `user`
        <set>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="mobile != null">
                mobile = #{mobile},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            update_user_id = #{updateUserId},
            update_time = #{updateTime}
        </set>
        where user_id = #{userId}
    </update>
    <delete id="del" parameterType="java.lang.Integer">
        delete from `user` where user_id = #{userId}
    </delete>
</mapper>